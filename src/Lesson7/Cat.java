package Lesson7;

public class Cat {

    private final int name;
    private int appetite;
    Cat(int name, int appetite) {
        this.name = name;
        this.appetite = appetite;
    }

    void info(){
        System.out.println("Кот № " + name + " хочет съесть " + appetite + "кг вискоса");
    }
/*Здание 3. Считаем, что если коту мало еды в тарелке, то он её просто не трогает, то есть не может быть
наполовину сыт (это сделано для упрощения логики программы).
Не захотелось мне упрощать логику, мне все же захотелось полностью накормить котов, добавляя
 еды в тарелку по мере ее опустошения. По моему даже при таком условии все получилось очень просто.
 Здесь я также выполняю пятый пункт задания - 5. Добавить в тарелку метод,
 с помощью которого можно было бы добавлять еду в тарелку.*/
    void eat(Plate p) {
        int app = p.decreaseFood(appetite);
        while(app < 0){
            appetite = Math.abs(app);
            System.out.println("Кот не наелся, ему еще нужно съесть " + appetite + "кг вискоса");
            app = p.decreaseFood(appetite);
        }
        appetite = 0;
        /*Задание 2. Каждому коту нужно добавить поле сытость (когда создаем котов, они голодны). Если коту
удалось покушать (хватило еды), сытость = true.
Тут очень просто. Этот метод можно сделать boolean и здесь возвращать сытость = true, тут как раз аппетит
равен нулю(здесь appetite = 0 не играет ни какой роли, даже если эту строчку удалить
  - ни чего не измениться, можно было и return true; сделать).
В данном случае не вижу в этом смысла*/
        System.out.println("Кот наелся!\n" + "В тарелке осталось " + p.getFood() + "кг вискоса");
    }
}
